//
// Variables
//

// We use these to control button text styles.

// We use these to controls background-color. Alert and success colors is in forms.scss
$button-bgColor-std:                    #458596;
$button-bgColor-white:					$color-white;



//--------------------------------------------------------------*/
// FUNKAs CSS
//--------------------------------------------------------------*/

// CSS FOR ALL DEVICES




button, .button, input[type="button"], input[type="submit"] {
    position: relative;
    width: 100%;

    @include button;
    //border-radius: 5px;
    .active & {
        &.nocursor {
            cursor: default;

            &:hover {
                background-color: initial;
                background-color: $color-black;
                border: 1px solid $color-black;
                color: $color-white;
            }
        }
    }

    &:active {
        background-color: lighten($color-black, 50%);
    }

    &.tiny {
        padding: 0.3em 1em;
        font-size: map-get($button-sizes, tiny);
    }

    &.small {
        padding: 0.5em 1em;
        font-size: map-get($button-sizes, small);
    }

    &.large {
        padding: 0.8em 1em;
        font-size: map-get($button-sizes, large);
        width: 100%;
        margin: 0;
    }

    &.dark-blue {
        background-color: $color-blue-darker;
        color: $color-white;

        &:hover {
            background-color: darken($color-blue-darker, 5%);
        }
    }


    &.light-blue {
        background-color: $color-blue-light;
        color: $color-blue-darkest;

        &:hover {
            background-color: darken($color-blue-light, 5%);
        }
    }


    &.blue, &.add {
        background-color: $color-blue;
        color: $color-white;
        margin-right: 1rem;

        &.icon {
            padding-left: 2rem;
            background: url('/css/cssimg/icons-sprite.svg') $color-blue 10px -188px no-repeat;
        }

        &:hover {
            background-color: darken($color-blue, 5%);
        }
    }

    &.green, &.update {
        background-color: $color-green;
        color: $color-white;
        margin-right: 1rem;

        &.icon {
            //padding-left: 2rem;
            //background: url('/css/cssimg/icons-sprite.svg') $color-green 10px -188px no-repeat;
        }

        &:hover {
            background-color: darken($color-green, 5%);
        }
    }


    &.pink, &.delete {
        background-color: $color-pink;
        color: $color-white;
        margin-right: 1rem;

        &.icon {
            padding-left: 2rem;
            background: url('/css/cssimg/icons-sprite.svg') $color-pink 10px -288px no-repeat;
        }

        &:hover {
            background-color: darken($color-pink, 5%);
        }
    }


    &.black {
        background-color: $color-black;
        color: $color-white;
        border-color: $color-black;

        &:hover, &:focus {
            background-color: $button-bgColor-std;
            border-color: $button-bgColor-std;
            color: $color-black;
        }

        &:active {
            background-color: darken($button-bgColor-std, 5%);
            border-color: darken($border-color, 5%);
        }
    }

    &.link-button {
        background-color: transparent;
        color: $dirty-blue;
        border-color: $color-black;
        text-decoration: underline;
        margin-bottom: 0.2rem;
        font-size: 17px;

        &:hover, &:focus {
            text-decoration: none;
        }
    }


    &.toogle-header-button {
        text-align: left;
        font-weight: bold;
        background-color: $light-blue-grey;
        padding: 1rem 12px 1rem 10px;
        margin-bottom: 20px;
        color: $dark-blue-grey;
        font-size: 20px;
        border-radius: 0;
        width: 100%;

        &[aria-expanded="false"] {
            .toggle-header-icon {
                top: 6px;
                transform: rotate(-45deg);
                transition: transform 200ms ease;
            }
        }

        &[aria-expanded="true"] {
            .toggle-header-icon {
                transform: rotate(-225deg);
                top: 12px;
                transition: transform 200ms ease;
            }
        }

        .toggle-header-number {
            border: 1px solid $dark-blue-grey;
            border-radius: 100px;
            width: 28px;
            height: 28px;
            display: inline-block;
            text-align: center;
            line-height: 1.15;
        }

        .toggle-header-icon {
            border: 2px solid $dark-blue-grey;
            border-top-color: transparent;
            border-right-color: transparent;
            width: 11px;
            height: 11px;
            display: inline-block;
            transform: rotate(-45deg);
            margin-left: 6px;
            position: relative;
            float: right;
        }
    }

    &.upload-photo {
        font-size: 17px;

        span {
            display: inline-block;
            width: 26px;
            height: 20px;
            background: url('/css/cssimg/icons-sprite.svg') transparent 0 -404px no-repeat;
            vertical-align: text-bottom;
        }
    }

    &.card-help-button {
        background: url("/css/cssimg/icons-sprite.svg") transparent 0 -491px no-repeat;
        width: 40px;
        margin-bottom: 0;
        height: 40px;
    }

    &.card-help-close-button {
        background: url("/css/cssimg/icons-sprite.svg") transparent 0 -591px no-repeat;
        width: 40px;
        margin-bottom: 0;
        height: 40px;
    }

    &.tabbed {
        outline: none;
        border: 0;
        background-color: $tabbed-color;
        color: $color-white;
    }

    &.wide {
        padding-left: 0rem;
        padding-right: 0rem;
        min-width: 60%;
        margin-top: 2rem;
        margin-bottom: 0;
    }
}



$button-palette: ( black: #000000, red: #ff0000, purple: #bb00ff ) !default;


// Create a variable for my custom color.
//$custom-color: get-color(custom);


//--------------------------------------------------------------*/
// CODE ABOVE IS FOR ALL SCREENS
// MEDIA QUERIES BELOW IS FOR MEDIUM + LARGE OR JUST LARGE
//--------------------------------------------------------------*/
//--------------------------------------------------------------*/


// MEDIUM + LARGE SCREEN
@include breakpoint(medium) {

    button, .button, input[type="button"], input[type="submit"] {
        width: auto;

        &.text-button {
            margin: 0 1rem;
        }

        &.wide {
            padding-left: 3rem;
            padding-right: 3rem;
        }
    }
}

// LARGE SCREEN
@include breakpoint(large) {

}
