@page

@using Difi.Sjalvdeklaration.Shared.Enum
@model DeclarationListModel
@{
    var companyName = Model.CompanyItem?.Name;

    if (!string.IsNullOrEmpty(Model.CompanyItem?.CustomName))
    {
        companyName = Model.CompanyItem.CustomName;
    }

    var title = companyName;

    ViewData["Title"] = title;
}

@if (Model.CompanyItem != null)
{
    <header>
        <div class="row">
            <div class="xlarge-12 large-10 small-12 large-centered xlarge-uncentered columns">
                <div class="row">
                    <div class="small-8 column">
                        <div class="logo">
                            <img alt="Difi" src="~/images/difi-logo.svg" />
                        </div>
                    </div>
                    <div class="small-4 column">
                        <div class="jsProfileContainer profile-wrapper">
                            <div class="profile-area">
                                <div class="row collapse">
                                    <div class="small-12 medium-12 columns">

                                        <button class="jsProfileTrigger toggle-profile-button button">
                                            <span class="profile-first-letter declaration">@companyName</span>

                                            <span class="profile-area-text-wrapper hide-for-small-only">
                                                <span class="profile-name hide-for-small-only">@companyName</span><br />
                                                <span class="profile-title hide-for-small-only"></span>
                                            </span>

                                            <span class="profile-icon"><span class="show-for-sr"> - @Localizer["View log out"]</span></span>
                                        </button>
                                    </div>
                                </div>
                            </div>

                            <div class="jsProfileToggleTarget profile-info-area" style="display: none;">
                                <a asp-page="/LogoutHandler" asp-route-what="logout" class="button alt logout">@Localizer["Log out"]</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </header>

    <main>
        <div class="row">
            <div class="xlarge-12 large-10 small-12 large-centered xlarge-uncentered columns">

                <h1>@Localizer["Self control for"] @companyName</h1>

                <div class="jsDeclarationListToggleCardContainer">
                    <div class="row medium-uncollapse">
                        <div class="small-12 medium-12 columns">
                            <h2 class="h2-toggle"><button class="toogle-header-button-alt jsDeclarationListToggleCardButton"><span class="toggle-header-icon hide-for-print"><span class="show-for-sr">@Localizer["Show/Hide"]</span></span> @Localizer["Check business information"]</button></h2>
                        </div>
                    </div>

                    <div class="row">
                        <div class="small-12 medium-12 columns">
                            <div class="jsDeclarationListToggleCardTarget">
                                <div class="card declaration-list-info">

                                    <div class="row column">
                                        <h2>@Localizer["Business information"]</h2>
                                    </div>

                                    <form method="post">
                                        @Html.HiddenFor(x => x.CompanyCustomItem.CompanyItemId)

                                        <div asp-validation-summary="All"></div>

                                        <div class="row">
                                            <div class="small-12 medium-4 end columns">
                                                @Html.EditorFor(x => x.CompanyItem.CorporateIdentityNumber, "TextBox", new { readOnly = true })
                                            </div>
                                        </div>

                                        <div class="row">
                                            <div class="small-12 medium-6 end columns">
                                                @Html.EditorFor(x => x.CompanyCustomItem.CustomName, "TextBox")
                                            </div>
                                        </div>

                                        <fieldset>
                                            <legend>@Localizer["Mailing address"]</legend>

                                            <div class="row">
                                                <div class="small-12 medium-6 end columns">
                                                    @Html.EditorFor(x => x.CompanyItem.MailingAddressStreet, "TextBox", new { readOnly = true })
                                                </div>
                                            </div>

                                            <div class="row">
                                                <div class="small-12 medium-4 end columns">
                                                    @Html.EditorFor(x => x.CompanyItem.MailingAddressZip, "TextBox", new { readOnly = true })
                                                </div>
                                            </div>

                                            <div class="row">
                                                <div class="small-12 medium-6 end columns">
                                                    @Html.EditorFor(x => x.CompanyItem.MailingAddressCity, "TextBox", new { readOnly = true })
                                                </div>
                                            </div>

                                        </fieldset>

                                        <br />

                                        <fieldset>
                                            <legend>@(string.IsNullOrEmpty(Model.CompanyItem.OwenerCorporateIdentityNumber) ? Localizer["Business Address"] : Localizer["Location Address"])</legend>

                                            <div class="row">
                                                <div class="small-12 medium-6 end columns">
                                                    @Html.EditorFor(x => x.CompanyCustomItem.CustomAddressStreet, "TextBox")
                                                </div>
                                            </div>

                                            <div class="row">
                                                <div class="small-12 medium-6 end columns">
                                                    @Html.EditorFor(x => x.CompanyCustomItem.CustomAddressZip, "TextBox")
                                                </div>
                                            </div>

                                            <div class="row">
                                                <div class="small-12 medium-6 end columns">
                                                    @Html.EditorFor(x => x.CompanyCustomItem.CustomAddressCity, "TextBox")
                                                </div>
                                            </div>

                                        </fieldset>

                                        <br />

                                        <fieldset>
                                            <legend>
                                                @Localizer["Contact person business"]
                                            </legend>

                                            <div class="row">
                                                <div class="small-12 medium-6 end columns">
                                                    @Html.EditorFor(x => x.CompanyItem.ContactPersonList[0].Name, "TextBox", new { readOnly = true })
                                                </div>
                                            </div>

                                            <div class="row">
                                                <div class="small-12 medium-6 end columns">
                                                    @Html.EditorFor(x => x.CompanyItem.ContactPersonList[0].Email, "TextBox", new { readOnly = true })
                                                </div>
                                            </div>

                                            <div class="row">
                                                <div class="small-12 medium-4 end columns">
                                                    @Html.EditorFor(x => x.CompanyItem.ContactPersonList[0].PhoneCountryCode, "TextBox", new { readOnly = true })
                                                </div>
                                            </div>

                                            <div class="row">
                                                <div class="small-12 medium-6 end columns">
                                                    @Html.EditorFor(x => x.CompanyItem.ContactPersonList[0].Phone, "TextBox", new { readOnly = true })
                                                </div>
                                            </div>
                                        </fieldset>
                                        <br />
                                        <input class="button large" type="submit" value="@Localizer["Save"]" asp-route-handler="UpdateCustom" />
                                    </form>

                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="xlarge-12 large-10 small-12 large-centered xlarge-uncentered columns">
                <br />
                <div class="row">

                    @foreach (var item in Model.DeclarationList)
                    {
                        var done = item.Status.Id == (int)DeclarationStatus.SentIn || item.Status.Id == (int)DeclarationStatus.Finished || item.Status.Id == (int)DeclarationStatus.Canceled;
                        var color = done ? "green" : "pink";

                        <div class="small-12 medium-4 columns">
                            <div class="card @color-top">

                                <div class="card-divider">
                                    <div class="day-counter">
                                        @if (!done)
                                        {
                                            <span>@Localizer["Deadline"]:</span> @item.DeadlineDate.ToString("dd.MM.yyyy HH:mm")
                                        }
                                        else
                                        {
                                            <span>@Localizer["Submitted"]:</span> @item.SentInDate.ToString("dd.MM.yyyy HH:mm")
                                        }
                                    </div>
                                </div>

                                <div class="card-section">
                                    <div class="row align-middle">
                                        <div class="small-12 medium-12 columns text-center ">
                                            <div class="status status-@(item.DeclarationTestItem.StatusCount*25)">
                                                <div class="status-done">@(item.DeclarationTestItem.StatusCount * 25)%</div>
                                            </div>
                                        </div>
                                        <div class="small-12 medium-12 columns text-center">
                                            <span class="status-text">@item.Status.TextCompany</span>
                                        </div>
                                    </div>
                                </div>

                                <div class="card-section text-center medium-uncentered">
                                    <div class="declaration-name-type">
                                        <span class="declaration-name">
                                            @companyName
                                        </span>
                                        <span class="declaration-type">
                                            @item.Name
                                        </span>
                                    </div>
                                </div>
                                <div class="card-section text-center medium-uncentered">
                                    @if (item.DeclarationTestItem.HaveMachine==false || item.Status.Id == (int)DeclarationStatus.Sent || item.Status.Id == (int)DeclarationStatus.Created)
                                    {
                                        <a asp-page="/Declaration/DeclarationStart" class="button update" asp-route-id="@item.Id">@Localizer["Open self-control"]</a>
                                    }
                                    else if (item.Status.Id == (int)DeclarationStatus.Started || item.Status.Id == (int)DeclarationStatus.Return)
                                    {
                                        <a asp-page="/Declaration/DeclarationForm" class="button update" asp-route-id="@item.Id">@Localizer["Open self-control"]</a>
                                    }
                                </div>
                            </div>
                        </div>
                    }

                </div>
            </div>
        </div>
    </main>
}