@page
@using Difi.Sjalvdeklaration.Shared.Classes.Declaration.Data
@using Difi.Sjalvdeklaration.Shared.Enum
@model wwwroot.Pages.Declaration.DeclarationReadModel

@{
    ViewData["Title"] = Model.DeclarationItemForm?.Name;

    var mainIndex = 1;
}

@if (Model.DeclarationItemForm != null)
{
    if (Model.DeclarationItemForm.Status.Id == (int)DeclarationStatus.Started || Model.DeclarationItemForm.Status.Id == (int)DeclarationStatus.Return)
    {
        @Html.DisplayFor(x => x.DeclarationItemForm, "DeclarationStatus", new { backUrl = "/Declaration/DeclarationForm?id=" + Model.DeclarationItemForm.Id })
    }
    else
    {
        @Html.DisplayFor(x => x.DeclarationItemForm, "DeclarationStatus", new { backUrl = "/Declaration/DeclarationList" })
    }
    <main>
        <div class="row">
            <div class="xlarge-12 large-10 small-12 large-centered xlarge-uncentered columns">
                <h2 class="h1">@Localizer["Oppsummering"]</h2>
                @if (Model.DeclarationItemForm.Status.Id == (int)DeclarationStatus.Started || Model.DeclarationItemForm.Status.Id == (int)DeclarationStatus.Return)
                {
                    <p>
                        @Localizer["Confirm the information you have registered by pressing the submit button."]
                    </p>
                }

                @Html.DisplayFor(x => x.DeclarationItemForm, "DeclarationReadStep1", new { mainIndex, allDone = Model.AllDoneStep1 })

                @foreach (var declarationIndicatorGroup in Model.TestGroupItemList)
                {
                    mainIndex++;
                    @Html.DisplayFor(x => declarationIndicatorGroup, "DeclarationReadTestGroup", new { mainIndex, declarationItem = Model.DeclarationItemForm, viewResult = false })
                }

                <br />

                <div class="row collapse align-bottom hide-for-print">
                    @if (Model.DeclarationItemForm.DeclarationTestItem.StatusCount != 4)
                    {
                        <div class="small-12 columns">
                            <p class="send-info-wrapper">@Localizer["In order to submit, you must first complete the self-control by answering all the questions."]</p>
                        </div>
                    }

                    @if (Model.DeclarationItemForm.Status.Id == (int)DeclarationStatus.Started || Model.DeclarationItemForm.Status.Id == (int)DeclarationStatus.Return)
                    {
                        <div class="small-12 columns">
                            @if (Model.DeclarationItemForm.DeclarationTestItem.StatusCount == 4)
                            {
                                <form method="post">
                                    <a asp-page="/Declaration/DeclarationForm" class="button alt" asp-route-id="@Model.DeclarationItemForm.Id">@Localizer["Go back and change"]</a>
                                    <button class="button large" type="submit" asp-page-handler="SendIn" asp-route-id="@Model.DeclarationItemForm.Id">@Localizer["Submit"]</button>
                                </form>
                            }
                            else
                            {
                                <a asp-page="/Declaration/DeclarationForm" class="button alt" asp-route-id="@Model.DeclarationItemForm.Id">@Localizer["Go back and change"]</a>
                            }
                        </div>
                    }

                    @*<div class="small-12 columns">
                            <br/>
                            <button class="button print jsPrintButton" asp-route-id="@Model.DeclarationItemForm.Id">@Localizer["Print"]</button>
                        </div>*@

                </div>
                <br /><br />
            </div>
        </div>
    </main>
}