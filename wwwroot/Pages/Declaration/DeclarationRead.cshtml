@page
@using Difi.Sjalvdeklaration.Shared.Enum
@model wwwroot.Pages.Declaration.DeclarationReadModel

@{
    var title = "Selvdeklarasjon - Läsa";

    ViewData["Title"] = title;

    var lastTestGroupOrder = 0;
    var mainIndex = 1;
    var subIndex = 0;
}

<div class="row column">
    <h1>@title</h1>
</div>

<a asp-page="/Declaration/DeclarationList">DeclarationList</a>

@foreach (var declarationIndicatorGroup in Model.DeclarationItemForm.IndicatorList.OrderBy(x => x.TestGroupOrder).ThenBy(x => x.IndicatorInTestGroupOrder))
{
    var indicatorItem = declarationIndicatorGroup.IndicatorItem;
    var outcomeData = declarationIndicatorGroup.IndicatorItem.OutcomeData;

    if (lastTestGroupOrder != declarationIndicatorGroup.TestGroupOrder)
    {
        subIndex = 0;
        mainIndex++;

        lastTestGroupOrder = declarationIndicatorGroup.TestGroupOrder;


        <div class="row medium-uncollapse small-collapse">
            <div class="small-12 medium-6 columns">
                <h2 class="h2-toggle"><button disabled aria-controls="card-help-button" aria-expanded="true" class="toogle-header-button"><span class="toggle-header-number">@mainIndex</span> @declarationIndicatorGroup.IndicatorItem.Name <span class="toggle-header-icon"><span class="show-for-sr">Show/hide</span></span> </button></h2>
            </div>
        </div>


    }

    <div>
        @foreach (var ruleItem in indicatorItem.RuleList.OrderBy(x => x.Order))
        {
            var ruleData = outcomeData.RuleDataList.SingleOrDefault(x => x.RuleItemId == ruleItem.Id);

            var firstQuestion = true;

            subIndex++;

            <div class="card transparent">
                <div class="card-divider jsRuleItem" id="@ruleItem.Id">
                    @foreach (var answerItem in ruleItem.AnswerList.OrderBy(x => x.Order))
                    {
                        var answerData = ruleData.AnswerDataList.SingleOrDefault(x => x.AnswerItemId == answerItem.Id);

                        var hide = answerItem.ViewIfParentFailedId != Guid.Empty || answerItem.ViewIfParentCorrectId != Guid.Empty;

                        var formId = indicatorItem.Id + "_" + ruleItem.Id + "_" + answerItem.Id;
                        var orderText = mainIndex + "." + subIndex;

                        <div class="jsAnswerItem" data-hide="@hide" data-type="@answerItem.TypeOfAnswer.Text" data-id="@answerItem.Id" data-bool="@answerItem.Bool" data-min="@answerItem.MinInt" data-max="@answerItem.MaxInt" data-ViewIfParentFailedId="@answerItem.ViewIfParentFailedId" data-ViewIfParentCorrectId="@answerItem.ViewIfParentCorrectId">

                            <h3>@answerItem.Question</h3>

                            @if (answerItem.TypeOfAnswer.Id == (int)TypeOfAnswer.String)
                            {
                                @answerData.String
                            }

                            @if (answerItem.TypeOfAnswer.Id == (int)TypeOfAnswer.Bool)
                            {
                                @answerData.Bool
                            }

                            @if (answerItem.TypeOfAnswer.Id == (int)TypeOfAnswer.Int)
                            {
                                @answerData.Int
                            }

                            @if (answerItem.TypeOfAnswer.Id == (int)TypeOfAnswer.Image)
                            {

                            }

                            <br />
                            <br />

                        </div>

                        firstQuestion = false;
                    }

                </div>
            </div>
        }
    </div>


}

<div class="row column">
    <hr><br />
    <button class="button large">.button .large</button>
    <br /><br />
    <button class="button large">.button .large</button>
    <br /><br />
    <button class="button">.button</button>
    <br /><br /><br /><br />
</div>

@*@foreach (var outcomeData in Model.OutcomeDataList)
    {
        <h2>@outcomeData.Id <span>(@outcomeData.Result.Text)</span></h2>


        foreach (var ruleData in outcomeData.RuleDataList.OrderBy(x => x.Rule.Order))
        {

            foreach (var answerData in ruleData.AnswerDataList)
            {
                <h4>@answerData.AnswerItem.Question <span>(@ruleData.Result.Text)</span></h4>

                if (answerData.TypeOfAnswerId == (int)TypeOfAnswer.String)
                {
                    <b>@answerData.String</b> <span>(@answerData.Result.Text)</span>
                }

                if (answerData.TypeOfAnswerId == (int)TypeOfAnswer.Bool)
                {
                    <b>@answerData.Bool</b> <span>(@answerData.Result.Text)</span>
                }

                if (answerData.TypeOfAnswerId == (int)TypeOfAnswer.Int)
                {
                    <b>@answerData.Int</b> <span>(@answerData.Result.Text)</span>
                }
            }
            <br /><br />
        }

        <hr />
    }*@