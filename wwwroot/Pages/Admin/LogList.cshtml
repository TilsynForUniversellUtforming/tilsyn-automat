@page
@using Difi.Sjalvdeklaration.wwwroot.Pages.Admin
@model Difi.Sjalvdeklaration.wwwroot.Pages.Admin.LogListModel
@{
    ViewData["Title"] = Localizer["Log list"];
}

<h1>@Localizer["Log list"]</h1>

<br />

@if (Model.LogList != null)
{
    <table class="responsive-table table jsLogTableSort">
        <caption>
            <h2>@Localizer["Log list"]</h2>
        </caption>
        <thead>
        <tr>
            <th scope="col">@Html.DisplayNameFor(x => x.LocalizationItem.Created)</th>
            <th scope="col">@Html.DisplayNameFor(x => x.LocalizationItem.Class)</th>
            <th scope="col">@Html.DisplayNameFor(x => x.LocalizationItem.Function)</th>
            <th scope="col">@Html.DisplayNameFor(x => x.LocalizationItem.UserId)</th>
            <th scope="col">@Html.DisplayNameFor(x => x.LocalizationItem.ResultSucceeded)</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var item in Model.LogList)
        {
            <tr>
                <td class="clickable-td" data-th="@Html.DisplayNameFor(x => x.LocalizationItem.Created)">
                    <span class="hide">@item.Created.Ticks</span>
                    <a asp-page="LogView" asp-route-id="@item.Id">@item.Created.ToString("dd.MM.yyyy HH:mm")</a>
                </td>

                <td data-th="@Html.DisplayNameFor(x => x.LocalizationItem.Class)">
                    @item.Class.Replace("LogDecorator", String.Empty)
                </td>

                <td data-th="@Html.DisplayNameFor(x => x.LocalizationItem.Function)">
                    @item.Function
                </td>

                <td data-th="@Html.DisplayNameFor(x => x.LocalizationItem.UserId)">
                    @item.UserItem.Name
                </td>

                <td data-th="@Html.DisplayNameFor(x => x.LocalizationItem.ResultSucceeded)">
                    @(item.ResultSucceeded ? Localizer["Yes"] : Localizer["No"])
                </td>
            </tr>
        }
        </tbody>
    </table>
}