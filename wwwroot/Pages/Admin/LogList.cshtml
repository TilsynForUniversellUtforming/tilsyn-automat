@page
@using Difi.Sjalvdeklaration.wwwroot.Pages.Admin
@model Difi.Sjalvdeklaration.wwwroot.Pages.Admin.LogListModel
@{
    ViewData["Title"] = Localizer["Log list"];
}

<h1>@Localizer["Log list"]</h1>

<br />

<form method="post">
    <div class="row">
        <div class="small-12 column">
            <h3>@Localizer["Filter loglist"]</h3>
        </div>
    </div>

    <div class="row">
        <div class="small-12 column">
            <div class="filter-wrapper">
         

                <div class="row">
                    <div class="small-12 medium-4 column">
                        <div class="row">
                            <div class="small-6 column">
                                @Html.EditorFor(x => x.FilterModel.FromDate, "Date")
                            </div>
                            <div class="small-6 column">
                                @Html.EditorFor(x => x.FilterModel.ToDate, "Date")
                            </div>
                        </div>
                    </div>

                    <div class="small-12 medium-4 column">
                        @Html.EditorFor(x => x.FilterModel.Succeeded, "DropdownListInt", new { list = Model.SelectSucceededList })
                    </div>

                    <div class="small-12 medium-4 column">
                        <div class="row collapse">
                            <div class="small-6 column">
                                <br />
                                <button class="button large" type="submit" asp-page-handler="Filter">@Localizer["Filter"]</button>
                            </div>
                            <div class="small-6 column">
                                <br />
                                <button class="button large alt" type="submit" asp-page-handler="ViewAll">@Localizer["Reset"]</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>

@if (Model.LogList != null)
{
    <table class="responsive-table table jsLogTableSort">
        <caption>
            <h2>@Localizer["Log list"]</h2>
        </caption>
        <thead>
            <tr>
                <th scope="col">@Html.DisplayNameFor(x => x.LocalizationItem.Created)</th>
                <th scope="col">@Html.DisplayNameFor(x => x.LocalizationItem.Class)</th>
                <th scope="col">@Html.DisplayNameFor(x => x.LocalizationItem.Function)</th>
                <th scope="col">@Html.DisplayNameFor(x => x.LocalizationItem.UserId)</th>
                <th scope="col">@Html.DisplayNameFor(x => x.LocalizationItem.ResultSucceeded)</th>
                <th scope="col">@Html.DisplayNameFor(x => x.LocalizationItem.Time)</th>
            </tr>
        </thead>
        <tbody>
        @foreach (var item in Model.LogList)
        {
            <tr>
                <td class="clickable-td" data-th="@Html.DisplayNameFor(x => x.LocalizationItem.Created)">
                    <span class="hide">@item.Created.Ticks</span>
                    <a asp-page="LogView" asp-route-id="@item.Id">@item.Created.ToString("dd.MM.yyyy HH:mm")</a>
                </td>

                <td data-th="@Html.DisplayNameFor(x => x.LocalizationItem.Class)">
                    @item.Class.Replace("LogDecorator", String.Empty)
                </td>

                <td data-th="@Html.DisplayNameFor(x => x.LocalizationItem.Function)">
                    @item.Function
                </td>

                <td data-th="@Html.DisplayNameFor(x => x.LocalizationItem.UserId)">
                    @item.UserItem.Name
                </td>

                <td data-th="@Html.DisplayNameFor(x => x.LocalizationItem.ResultSucceeded)">
                    @(item.ResultSucceeded ? Localizer["Yes"] : Localizer["No"])
                </td>
                
                <td data-th="@Html.DisplayNameFor(x => x.LocalizationItem.Time)">
                    @item.Time ms
                </td>
            </tr>
        }
        </tbody>
    </table>
}