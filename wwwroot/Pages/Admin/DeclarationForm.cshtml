@page
@model DeclarationFormModel

@{
    var title = Model.DeclarationItemForm.Id != Guid.Empty ? "Oppdater egenkontroll" : "Opprette egenkontroll";

    ViewData["Title"] = Model.DeclarationItemForm.Company.Name + " - " + title;
}

<h1>@Model.DeclarationItemForm.Company.Name</h1>

<div class="form-wrapper">

    <h2>@title</h2>

    <form method="post">
        <div asp-validation-summary="All"></div>

        <div class="row">
            <div class="small-12 medium-6 end columns">
                @Html.HiddenFor(x => x.DeclarationItemForm.Id)
                @Html.HiddenFor(x => x.DeclarationItemForm.CompanyItemId)
                @Html.EditorFor(x => x.DeclarationItemForm.Name, "TextBox")
            </div>
        </div>

        <div class="row">
            <div class="small-12 medium-4 end columns">
                @Html.EditorFor(x => x.DeclarationItemForm.CaseNumber, "TextBox")
            </div>
        </div>

        <div class="row">
            <div class="small-12 medium-4 end columns">
                @Html.EditorFor(x => x.DeclarationItemForm.DeadlineDate, "DateTime")
            </div>
        </div>

        @if (Model.DeclarationItemForm.Id != Guid.Empty)
        {
            <div class="row">
                <div class="small-12 medium-6 end columns">
                    @Html.EditorFor(x => x.DeclarationItemForm.StatusId, "DropdownListInt", new { list = Model.SelectStatusList })
                </div>
            </div>
        }

        <div class="row">
            <div class="small-12 medium-6 end columns">
                @Html.EditorFor(x => x.DeclarationItemForm.DeclarationTestItem.PurposeOfTestId, "DropdownListInt", new { list = Model.SelectPurposeOfTest })
            </div>
        </div>

        <div class="row">
            <div class="small-12 medium-6 end columns">
                @Html.EditorFor(x => x.DeclarationItemForm.UserItemId, "DropdownListGuid", new { list = Model.SelectUserList })
            </div>
        </div>

        <div style="display: none;">
            @Html.EditorFor(x => x.DeclarationItemForm.DeclarationTestItem.TypeOfTest, "DisplayValueList")
            @Html.EditorFor(x => x.DeclarationItemForm.DeclarationTestItem.TypeOfMachine, "DisplayValueList")
        </div>

        <br /><br />

        <div class="row collapse align-bottom">
            <div class="small-12 column">
                @if (Model.DeclarationItemForm.Id != Guid.Empty)
                {
                    <a class="button cancel" asp-page="/Admin/DeclarationList">@Localizer["Cancel"]</a>

                    <input class="button large" type="submit" value="@Localizer["Update"]" />

                }
                else
                {
                    <a class="button cancel" asp-page="/Admin/CompanyList">@Localizer["Cancel"]</a>

                    <input class="button large" type="submit" value="@Localizer["Add"]" />

                }
            </div>
        </div>

    </form>
</div>

@if (Model.DeclarationItemForm?.Status?.Id > 2)
{
    <h1>Oppsummering</h1>
}


@section Scripts {
    @{ await Html.RenderPartialAsync("Shared/_ValidationScriptsPartial");}
}