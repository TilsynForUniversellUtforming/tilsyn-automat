// <auto-generated />

using System;
using Difi.Sjalvdeklaration.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;

namespace Difi.Sjalvdeklaration.wwwroot.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20181031064123_v2")]
    partial class v2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Difi.Sjalvdeklaration.Shared.Classes.CompanyItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Code");

                    b.Property<string>("CorporateIdentityNumber");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("CompanyList");

                    b.HasData(
                        new { Id = new Guid("217bca57-cb46-49e4-9c6a-c59df606ae81"), Code = "1111", CorporateIdentityNumber = "123456789", Name = "Narvesen" },
                        new { Id = new Guid("75efef68-2248-40b5-a6cb-ee4455949605"), Code = "2222", CorporateIdentityNumber = "987654321", Name = "Norwegian" },
                        new { Id = new Guid("08d5d059-4469-4c35-b2f7-0e402588c28d"), Code = "3333", CorporateIdentityNumber = "1122334455", Name = "NSB" },
                        new { Id = new Guid("6419618e-d641-45a9-8a90-5d5c5878bb99"), Code = "4444", CorporateIdentityNumber = "1122334455", Name = "Esso" },
                        new { Id = new Guid("f5c759dc-b0ce-4f7c-8273-5938e0ca613c"), Code = "5555", CorporateIdentityNumber = "1122334455", Name = "7 - eleven" },
                        new { Id = new Guid("e2d4b5de-e887-4777-9f66-1cfc508bc105"), Code = "6666", CorporateIdentityNumber = "1122334455", Name = "Norske bank" }
                    );
                });

            modelBuilder.Entity("Difi.Sjalvdeklaration.Shared.Classes.ContactPersonItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CompanyItemId");

                    b.Property<string>("Email");

                    b.Property<string>("Name");

                    b.Property<string>("Phone");

                    b.HasKey("Id");

                    b.HasIndex("CompanyItemId");

                    b.ToTable("ContactPersonList");

                    b.HasData(
                        new { Id = new Guid("9895b72d-1842-4b18-a44b-a1e2f0840553"), CompanyItemId = new Guid("217bca57-cb46-49e4-9c6a-c59df606ae81"), Email = "henrik.juhlin@funka.com", Name = "Henrik Juhlin", Phone = "070-601 75 46" },
                        new { Id = new Guid("807f15cf-3573-4da0-988b-5a2db115b706"), CompanyItemId = new Guid("75efef68-2248-40b5-a6cb-ee4455949605"), Email = "henrik.juhlin@funka.com", Name = "Henrik Juhlin", Phone = "070-601 75 46" },
                        new { Id = new Guid("5bb4865d-b202-4d9f-aadb-bd91ec561416"), CompanyItemId = new Guid("08d5d059-4469-4c35-b2f7-0e402588c28d"), Email = "henrik.juhlin@funka.com", Name = "Henrik Juhlin", Phone = "070-601 75 46" },
                        new { Id = new Guid("ac6e2c54-9dbe-4fb3-8e63-c6ff22e33988"), CompanyItemId = new Guid("6419618e-d641-45a9-8a90-5d5c5878bb99"), Email = "henrik.juhlin@funka.com", Name = "Henrik Juhlin", Phone = "070-601 75 46" },
                        new { Id = new Guid("dfdd5dbd-a26b-4a20-a3d0-24c75fcf5a40"), CompanyItemId = new Guid("f5c759dc-b0ce-4f7c-8273-5938e0ca613c"), Email = "henrik.juhlin@funka.com", Name = "Henrik Juhlin", Phone = "070-601 75 46" },
                        new { Id = new Guid("1e5ef8cd-3c47-4fe9-99cd-a2dd990f834e"), CompanyItemId = new Guid("e2d4b5de-e887-4777-9f66-1cfc508bc105"), Email = "henrik.juhlin@funka.com", Name = "Henrik Juhlin", Phone = "070-601 75 46" }
                    );
                });

            modelBuilder.Entity("Difi.Sjalvdeklaration.Shared.Classes.DeclarationItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CompanyItemId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<DateTime>("DeadLineDate");

                    b.Property<string>("Name");

                    b.Property<DateTime>("SentInDate");

                    b.Property<int>("Status");

                    b.Property<Guid>("UserItemId");

                    b.HasKey("Id");

                    b.HasIndex("CompanyItemId");

                    b.HasIndex("UserItemId");

                    b.ToTable("DeclarationList");

                    b.HasData(
                        new { Id = new Guid("3aa82697-77b6-4885-b716-ea6a96e7a72c"), CompanyItemId = new Guid("217bca57-cb46-49e4-9c6a-c59df606ae81"), CreatedDate = new DateTime(2018, 10, 21, 0, 0, 0, 0, DateTimeKind.Local), DeadLineDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Name = "Automat for betaling på Oslo S", SentInDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Status = 1, UserItemId = new Guid("59d08447-fa82-4b09-94f1-5e6eb0b80624") },
                        new { Id = new Guid("0b50e67c-d07d-4c8b-b7ac-b68289d9abec"), CompanyItemId = new Guid("75efef68-2248-40b5-a6cb-ee4455949605"), CreatedDate = new DateTime(2018, 10, 26, 0, 0, 0, 0, DateTimeKind.Local), DeadLineDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Name = "Billettautomat Gardemoen", SentInDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Status = 0, UserItemId = new Guid("ff6c5592-2594-419e-a147-82e233e80f8d") },
                        new { Id = new Guid("bd87a432-b6bb-47ec-90d4-ef4cf2123658"), CompanyItemId = new Guid("08d5d059-4469-4c35-b2f7-0e402588c28d"), CreatedDate = new DateTime(2018, 10, 26, 0, 0, 0, 0, DateTimeKind.Local), DeadLineDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Name = "Billettautomat på Oslo S", SentInDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Status = 3, UserItemId = new Guid("59d08447-fa82-4b09-94f1-5e6eb0b80624") },
                        new { Id = new Guid("87140fbe-bcc4-4f1a-933d-75ccc5dedd96"), CompanyItemId = new Guid("6419618e-d641-45a9-8a90-5d5c5878bb99"), CreatedDate = new DateTime(2018, 10, 28, 0, 0, 0, 0, DateTimeKind.Local), DeadLineDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Name = "Betalingsautomat Trondheim", SentInDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Status = 3, UserItemId = new Guid("ff6c5592-2594-419e-a147-82e233e80f8d") },
                        new { Id = new Guid("bc92c366-234f-480d-8f61-0a735cc70789"), CompanyItemId = new Guid("f5c759dc-b0ce-4f7c-8273-5938e0ca613c"), CreatedDate = new DateTime(2018, 10, 26, 0, 0, 0, 0, DateTimeKind.Local), DeadLineDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Name = "Automat Grensen", SentInDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Status = 2, UserItemId = new Guid("59d08447-fa82-4b09-94f1-5e6eb0b80624") },
                        new { Id = new Guid("e3f6952a-9ca2-4683-960a-2a544c761af1"), CompanyItemId = new Guid("e2d4b5de-e887-4777-9f66-1cfc508bc105"), CreatedDate = new DateTime(2018, 10, 28, 0, 0, 0, 0, DateTimeKind.Local), DeadLineDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Name = "Billettautomat Kristiansand", SentInDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Status = 4, UserItemId = new Guid("ff6c5592-2594-419e-a147-82e233e80f8d") }
                    );
                });

            modelBuilder.Entity("Difi.Sjalvdeklaration.Shared.Classes.RoleItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("RoleList");

                    b.HasData(
                        new { Id = new Guid("2d1e5be4-9885-498a-9daa-295c3c931c30"), Name = "Admin" },
                        new { Id = new Guid("42689f82-21bd-4766-a504-7637302f18a5"), Name = "Saksbehandlare" },
                        new { Id = new Guid("2eb2cb19-2be7-4df6-807f-20de54a29786"), Name = "Verksamhet" }
                    );
                });

            modelBuilder.Entity("Difi.Sjalvdeklaration.Shared.Classes.UserCompany", b =>
                {
                    b.Property<Guid>("UserItemId");

                    b.Property<Guid>("CompanyItemId");

                    b.HasKey("UserItemId", "CompanyItemId");

                    b.HasIndex("CompanyItemId");

                    b.ToTable("UserCompanyList");

                    b.HasData(
                        new { UserItemId = new Guid("aef385a1-a72f-4e71-8a53-05f5403dfe02"), CompanyItemId = new Guid("217bca57-cb46-49e4-9c6a-c59df606ae81") }
                    );
                });

            modelBuilder.Entity("Difi.Sjalvdeklaration.Shared.Classes.UserItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("IdPortenSub");

                    b.Property<string>("Name");

                    b.Property<string>("Phone");

                    b.Property<string>("SocialSecurityNumber");

                    b.HasKey("Id");

                    b.ToTable("UserList");

                    b.HasData(
                        new { Id = new Guid("59d08447-fa82-4b09-94f1-5e6eb0b80624"), IdPortenSub = "fqgADdXVzSgBdjIGl1KloQWjN-qGPN66S1h8EiBtg3g=", Name = "Thea", SocialSecurityNumber = "12089400420" },
                        new { Id = new Guid("ff6c5592-2594-419e-a147-82e233e80f8d"), IdPortenSub = "72og6NuGTB95NqnWN4Mj2IF_pVgodGv_qZ1F8c8u77c=", Name = "Martin", SocialSecurityNumber = "12089400269" },
                        new { Id = new Guid("aef385a1-a72f-4e71-8a53-05f5403dfe02"), IdPortenSub = "8zrqvL9yMbkJAfU_53_WE1jbTFUehgxmf7MADGcv98g=", Name = "", SocialSecurityNumber = "12089400188" }
                    );
                });

            modelBuilder.Entity("Difi.Sjalvdeklaration.Shared.Classes.UserRole", b =>
                {
                    b.Property<Guid>("UserItemId");

                    b.Property<Guid>("RoleItemId");

                    b.HasKey("UserItemId", "RoleItemId");

                    b.HasIndex("RoleItemId");

                    b.ToTable("UserRoleList");

                    b.HasData(
                        new { UserItemId = new Guid("59d08447-fa82-4b09-94f1-5e6eb0b80624"), RoleItemId = new Guid("2d1e5be4-9885-498a-9daa-295c3c931c30") },
                        new { UserItemId = new Guid("59d08447-fa82-4b09-94f1-5e6eb0b80624"), RoleItemId = new Guid("42689f82-21bd-4766-a504-7637302f18a5") },
                        new { UserItemId = new Guid("ff6c5592-2594-419e-a147-82e233e80f8d"), RoleItemId = new Guid("42689f82-21bd-4766-a504-7637302f18a5") },
                        new { UserItemId = new Guid("aef385a1-a72f-4e71-8a53-05f5403dfe02"), RoleItemId = new Guid("2eb2cb19-2be7-4df6-807f-20de54a29786") }
                    );
                });

            modelBuilder.Entity("Difi.Sjalvdeklaration.Shared.Classes.ContactPersonItem", b =>
                {
                    b.HasOne("Difi.Sjalvdeklaration.Shared.Classes.CompanyItem")
                        .WithMany("ContactPersonList")
                        .HasForeignKey("CompanyItemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Difi.Sjalvdeklaration.Shared.Classes.DeclarationItem", b =>
                {
                    b.HasOne("Difi.Sjalvdeklaration.Shared.Classes.CompanyItem", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyItemId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Difi.Sjalvdeklaration.Shared.Classes.UserItem", "User")
                        .WithMany()
                        .HasForeignKey("UserItemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Difi.Sjalvdeklaration.Shared.Classes.UserCompany", b =>
                {
                    b.HasOne("Difi.Sjalvdeklaration.Shared.Classes.CompanyItem", "CompanyItem")
                        .WithMany("UserList")
                        .HasForeignKey("CompanyItemId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Difi.Sjalvdeklaration.Shared.Classes.UserItem", "UserItem")
                        .WithMany("CompanyList")
                        .HasForeignKey("UserItemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Difi.Sjalvdeklaration.Shared.Classes.UserRole", b =>
                {
                    b.HasOne("Difi.Sjalvdeklaration.Shared.Classes.RoleItem", "RoleItem")
                        .WithMany("UserList")
                        .HasForeignKey("RoleItemId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Difi.Sjalvdeklaration.Shared.Classes.UserItem", "UserItem")
                        .WithMany("RoleList")
                        .HasForeignKey("UserItemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
